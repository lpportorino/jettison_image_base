name: Build Jettison Base Image

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jettison-base-ubuntu22

jobs:
  build:
    name: Build Multi-arch Image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Free disk space
        run: |
          echo "=== Disk space before cleanup ==="
          df -h

          echo "=== Cleaning up Docker ==="
          docker system prune -af --volumes

          echo "=== Removing unnecessary files ==="
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL

          echo "=== Disk space after cleanup ==="
          df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,ignore-error=true

      - name: Build test image for AMD64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          load: true
          tags: test-image:amd64
          cache-from: type=gha

      - name: Test AMD64 image
        run: |
          IMAGE="test-image:amd64"

          echo "=== Testing AMD64 image ==="
          docker run --rm "$IMAGE" bash -c 'echo "Container started successfully"'

          echo "=== Verifying archer user ==="
          docker run --rm "$IMAGE" id
          docker run --rm "$IMAGE" whoami | grep -q archer

          echo "=== Checking tools ==="
          docker run --rm "$IMAGE" wrapp 2>&1 | head -n 3 || true
          docker run --rm "$IMAGE" jettison_health 2>&1 | head -n 3 || true

          echo "=== Verifying wrapp is executable ==="
          docker run --rm "$IMAGE" sh -c 'command -v wrapp'

          echo "=== Verifying jettison_health is executable ==="
          docker run --rm "$IMAGE" sh -c 'command -v jettison_health'

          echo "=== Checking Ubuntu version ==="
          docker run --rm "$IMAGE" cat /etc/os-release | grep "22.04"

          echo "✓ All tests passed for AMD64"

  summary:
    name: Build Summary
    needs: build
    runs-on: ubuntu-22.04
    if: always()

    steps:
      - name: Check build status
        run: |
          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✓ Multi-arch build completed successfully"
            echo "Images pushed for: linux/amd64, linux/arm64"
          else
            echo "✗ Build failed"
            exit 1
          fi
